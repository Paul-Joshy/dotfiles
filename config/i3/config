# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font xft:URWGothic-Book 11

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec rxvt

# kill focused window
bindsym $mod+Shift+q kill

#preload
exec preload

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id rofi -show drun

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $workspace1  "1. General"
set $workspace2  "2. Coding"
set $workspace3  "3. Telegram"
set $workspace4  "4. Communications"
set $workspace5  "5. Password managers"
set $workspace6  "6. Databases"
set $workspace7  "7. Postman"
set $workspace8  "8. Notes"
set $workspace9  "9. Chill"
set $workspace10 "10. Extras"

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# assign programs to workspaces
assign [class="Google-chrome"] $workspace1
assign [class="Chromium-browser"] $workspace1
assign [class="Firefox"] $workspace9
assign [class="Code"] $workspace2
assign [class="jetbrains-webstorm"] $workspace2
assign [class="TelegramDesktop"] $workspace3
assign [class="Bettergram"] $workspace3
assign [class="Whatsdesk"] $workspace3
assign [class="whatsdesk"] $workspace3
assign [class="Mailspring"] $workspace3
assign [class="Flock"] $workspace4
assign [class="Skype"] $workspace4
assign [class="Station"] $workspace3
assign [class="Bitwarden"] $workspace5
assign [class="KeePassXC"] $workspace5
assign [class="MongoDB Compass"] $workspace6
assign [class="Mysql-workbench-bin"] $workspace6
assign [class="Postman"] $workspace7
assign [class="Boostnote"] $workspace8
assign [class="Sublime_text"] $workspace8
assign [class="Emacs"] $workspace8
for_window [class="Spotify"] move to workspace $workspace9
assign [class="Headset"] $workspace9
# assign [class="mpv"] $workspace9

# Configure layouts

# Make mpv floatable
for_window [class="mpv"] resize set 500 350
for_window [class="mpv"] resize set 500 350
for_window [instance="mpv"] floating enable
for_window [instance="mpv"] floating enable
for_window [class="mpv"] sticky enable
for_window [instance="mpv"] sticky enable
for_window [class="Nemo"] floating enable
for_window [class="Nemo"] resize set 1000 500

for_window [class="vlc"] resize set 500 350
for_window [class="vlc"] resize set 500 350
for_window [instance="vlc"] floating enable
for_window [instance="vlc"] floating enable
for_window [class="vlc"] sticky enable
for_window [instance="vlc"] sticky enable
for_window [instance="fontpreview"] floating enable
# Log work time
# exec ./Documents/dotfiles/scripts/recordstart.bash

#i3lock
exec xautolock -time 10 -locker 'i3lock Documents/dotfiles/scripts/i3lock.sh' & #screenshot is not rendering
bindsym Control+mod1+l exec ./Documents/dotfiles/scripts/i3lock.sh
# bindsym $mod+Escape exec ./Documents/dotfiles/scripts/i3lock.sh

#screensize
bindsym $mod+i exec ./.screenlayout/big.sh
bindsym $mod+o exec ./.screenlayout/small.sh

# Program shortcuts
bindsym $mod+c exec google-chrome
bindsym $mod+Shift+c exec chromium-browser
bindsym $mod+Shift+f exec nemo

# Scratchpads

# URxvt scratchpad
exec urxvt -name Vanilla
# execi_always urxvt -name Vanilla
for_window[class="URxvt" instance="Vanilla"] move window to scratchpad, border 1pixel
bindsym $mod+minus [class="URxvt" instance="Vanilla"] scratchpad show

# Ranger urxvt scratchpad
exec urxvt -name Scratch -e ranger
# exec_always urxvt -name Scratch -e ranger
for_window[class="URxvt" instance="Scratch"] move window to scratchpad, border 1pixel
bindsym $mod+equal [class="URxvt" instance="Scratch"] scratchpad show

# Vim scratchpad
exec urxvt -name Vim -e vim vimwiki/index.wiki
# exec_always urxvt -name Vim -e vim vimwiki/index.wiki
for_window[class="URxvt" instance="Vim"] move window to scratchpad, border 1pixel
bindsym $mod+m [class="URxvt" instance="Vim"] scratchpad show

# Org mode scratchpad (not working)
# exec urxvt -name Emacs -c emacs ~/Documents/org-files/scratchpad.org
# for_window[class="Urxvt" instance="Emacs"] move window to scratchpad, border 1pixel
# bindsym $mod+o [class="URxvt" instance="Emacs"] scratchpad show

# Tmux scratchpad
exec urxvt -name Tmux -e tmux
# exec_always urxvt -name Tmux -e tmux
for_window[class="URxvt" instance="Tmux"] move window to scratchpad, border 1pixel
bindsym $mod+shift+minus [class="URxvt" instance="Tmux"] scratchpad show

# Make pop ups floatable
for_window [window_role="pop-up"] floating enable

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#
# Window Colours
  client.focused $base0D $base0D $base00 $base01
  client.focused_inactive $base02 $base02 $base03 $base01
  client.unfocused $base01 $base01 $base03 $base01
  client.urgent $base02 $base08 $base07 $base08

# set primary gruvbox colorscheme colors
set $bg #282828
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #458588
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021
set $white #ffffff
set $black #000000

# bar {
#         status_command i3status
# 		colors {
# 			# bar background color
# 			background $bg
# 			# text color used for blocks that do not have a color specified.
# 			statusline $yellow
# 			# workspaces section            
# 			#                    border  backgr. text
# 			focused_workspace    $aqua $aqua $darkgray
# 			inactive_workspace   $darkgray $darkgray $yellow
# 			active_workspace     $darkgray $darkgray $yellow
# 			urgent_workspace     $red $red $bg
# 		}

# }


# green gruvbox
# class                 border|backgr|text|indicator|child_border
client.focused          $green $green $darkgray $purple $darkgray
client.focused_inactive $darkgray $darkgray $yellow $purple $darkgray
client.unfocused        $darkgray $darkgray $yellow $purple $darkgray
client.urgent           $red $red $white $red $red

# Trackpad enable natural scrolling
exec --no-startup-id synclient HorizEdgeScroll=1 VertEdgeScroll=1 VertScrollDelta=-50

# startup programs
# exec guake
exec redshift
exec_always "feh --bg-fill ~/Pictures/wallpapers/wallpaper"
exec_always --no--startup-id $HOME/scripts/polybarstart

# io config
# Pulse Audio controls
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls (doesn't work without sudo access for now)
bindsym XF86MonBrightnessUp exec light -A 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 5 # decrease screen brightness

# Screenshots
# bindsym Print exec --no-startup-id scrot
# bindsym Ctrl+Print --release exec scrot '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f'
# bindsym $mod+Print --release exec --no-startup-id scrot -w
# bindsym $mod+Shift+Print --release exec --no-startup-id scrot -s

# Desktop screenshot
bindsym --release Print exec "scrot ~/user/Pictures/screenshots/$(date --iso-8601='seconds').png -m -e 'xclip -selection c -t image/png < $f'"
# Selection screenshot
bindsym --release Shift+Print exec "scrot ~/user/Pictures/screenshots/$(date --iso-8601='seconds').png -s -e 'xclip -selection c -t image/png < $f'"

# # Desktop screenshot
# bindsym --release Print exec "scrot ~/Bilder/Bildschirmfotos/$(date --iso-8601='seconds').png -m -e 'xclip -selection c -t image/png < $f'"
# # Choose window
# bindsym --release Mod1+Sys_Req exec "import -window `xwininfo | awk '/.*Window id:.*/ {print $4}'` ~/Bilder/Bildschirmfotos/$(date --iso-8601='seconds').png"
# # Selection screenshot
# bindsym --release Shift+Print exec "scrot ~/Bilder/Bildschirmfotos/$(date --iso-8601='seconds').png -s -e 'xclip -selection c -t image/png < $f'"

# bindsym --release Print exec "scrot -m '/home/user/Pictures/screenshots/%s_%H%M_%d.%m.%Y_$wx$h.png'"
# bindsym --release Shift+Print exec "scrot -s '/home/user/Pictures/screenshots/%s_%H%M_%d%m%Y_$wx$h.png'"
# bindsym --release $mod+Shift+Print exec "scrot -u -d 4 '/home/user/Pictures/screenshots/%s_%H%M_%d%m%Y_$wx$h.png'"

# Touchpad controls
bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

## Volume control

# Path to volume control, without trailing slash
set $volumepath ~/i3-volume

# Command for the status line (used with -t, requires -u)
#   ie: i3blocks, i3status
set $statuscmd i3status

# Signal used to update the status line (used with -u, requires -t)
#   i3blocks uses SIGRTMIN+10 by default
#   i3status uses SIGUSR1 by default
set $statussig SIGUSR1

# Amount to increase/decrease volume as a percentage (used with -i, -d)
set $volumestep 5

# alsa-utils settings when not using pulseaudio-utils
#
# To configure a default card, see https://www.alsa-project.org/main/index.php/Asoundrc
#
# Card number to control. (used with -a and -c)
#   If not specified, i3-volume will let `amixer` use a default.
#   List cards: aplay -l
#set $alsacard 1

# Uncomment to use alsa-utils (append "-c $alsacard" without quotes to override default card)
#bindsym XF86AudioRaiseVolume exec $volumepath/volume -anp -i $volumestep -t $statuscmd -u $statussig
#bindsym XF86AudioLowerVolume exec $volumepath/volume -anp -d $volumestep -t $statuscmd -u $statussig
#bindsym XF86AudioMute        exec $volumepath/volume -amn -t $statuscmd -u $statussig

# pulseaudio-utils settings when not using alsa-utils
#
# Symbolic name for sink (numeric index not supported) (used with -s $sinkname)
#   Recommended: comment out this setting and omit the -s option to use default sink
#   List sink names: pacmd list-sinks | awk -F "[<>]" '/^\s+name: <.*>/{print $2}'
#set $sinkname alsa_output.pci-0000_00_1b.0.analog-stereo

# Using pulseaudio-utils (append "-s $sinkname" without quotes to override default sink)
bindsym XF86AudioRaiseVolume exec $volumepath/volume -np -i $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioLowerVolume exec $volumepath/volume -np -d $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioMute        exec $volumepath/volume -mn -t $statuscmd -u $statussig

# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 0

# Gaps
gaps inner 10
gaps outer -4

smart_gaps on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

new_window pixel 1
new_float normal

hide_edge_borders none
